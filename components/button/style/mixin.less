// mixins for button
// ------------------------
.button-size(@height; @padding; @font-size; @border-radius) {
  padding: @padding;
  font-size: @font-size;
  border-radius: @border-radius;
  height: @height;
}

.button-disabled() {
  &-disabled,
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      .button-color(@btn-disable-color; @btn-disable-bg; @btn-disable-border);
      text-shadow: none;
      box-shadow: none;
    }
  }
}

.button-variant-primary(@color; @background) {
  .button-color(@color; @background; @background);
  text-shadow: @btn-text-shadow;
  color: #fff;

  &:hover,
  &:focus {
    background-color: @submit-600;
    color: #fff;
  }

  &:active,
  &.active {
    background-color: @submit-600;
    color: #fff;
  }

  .button-disabled();
}

.button-variant-other(@color; @background; @border) {
  .button-color(@color; @background; @border);

  &:hover,
  &:focus {
    .button-color(
      ~`colorPalette('@{btn-primary-bg}', 5) `; @background; ~`colorPalette('@{btn-primary-bg}', 5)
        `
    );
  }
  &:active,
  &.active {
    .button-color(
      ~`colorPalette('@{btn-primary-bg}', 7) `; @background; ~`colorPalette('@{btn-primary-bg}', 7)
        `
    );
  }
  .button-disabled();
}
.button-variant-danger(@color; @background; @border) {
  .button-color(@color; @background; @border);
  &:hover {
    @error-600;
    @error-600;
    @error-600;
  }
  &:focus {
    .button-color(
      ~`colorPalette('@{color}', 5) `; @component-background; ~`colorPalette('@{color}', 5) `
    );
  }
  &:active,
  &.active {
    .button-color(
      @btn-primary-color; ~`colorPalette('@{color}', 7) `; ~`colorPalette('@{color}', 7) `
    );
  }
  .button-disabled();
}
.button-variant-ghost(@color) {
  .button-color(@color; transparent; @color);
  text-shadow: none;
  &:hover,
  &:focus {
    .button-color(~`colorPalette('@{color}', 5) `; transparent; ~`colorPalette('@{color}', 5) `);
  }
  &:active,
  &.active {
    .button-color(~`colorPalette('@{color}', 7) `; transparent; ~`colorPalette('@{color}', 7) `);
  }
  .button-disabled();
}
.button-color(@color; @background; @border) {
  color: @color;
  background-color: @background;
  border-color: @border;
  // a inside Button which only work in Chrome
  // http://stackoverflow.com/a/17253457
  > a:only-child {
    color: currentColor;
    &:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background: transparent;
    }
  }
}
// Base styles of buttons
// --------------------------------------------------
.btn() {
  display: inline-block;
  font-weight: @btn-font-weight;
  text-align: center;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: @border-width-base @border-style-base transparent;
  white-space: nowrap;
  .button-size(@btn-height-base; @btn-padding-base; @font-size-base; @btn-border-radius-base);
  user-select: none;
  position: relative;
  box-shadow: @btn-shadow;
  > .@{iconfont-css-prefix} {
    line-height: 1;
  }
  &,
  &:active,
  &:focus {
    outline: 0;
  }
  &:not([disabled]):hover {
    text-decoration: none;
  }
  &:not([disabled]):active {
    outline: 0;
    box-shadow: none;
  }
  &.disabled,
  &[disabled] {
    cursor: not-allowed;
    > * {
      pointer-events: none;
    }
  }
  &-lg {
    .button-size(@btn-height-lg; @btn-padding-lg; @btn-font-size-lg; @btn-border-radius-base);
  }
  &-sm {
    .button-size(@btn-height-sm; @btn-padding-sm; @btn-font-size-sm; @btn-border-radius-sm);
  }
}
// primary button style
.btn-primary() {
  .button-variant-primary(@btn-primary-color; @btn-primary-bg);
  &-disabled,
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background: @basic-200;
      border-color: @basic-200;
      color: @standard-white;
    }
  }
}
// default button style
.btn-default() {
  .button-variant-other(@btn-default-color; @btn-default-bg; @btn-default-border);
  &:hover,
  &:focus,
  &:active,
  &.active {
    background: @btn-default-bg;
    text-decoration: none;
  }
}
// ghost button style
.btn-ghost() {
  .button-variant-other(@btn-ghost-color, @btn-ghost-bg, @btn-ghost-border);
}
// interfaceBtn button style
.btn-interfaceBtn() {
  .button-variant-other(@basic-500, @btn-default-bg, @bordernone);
  &:hover,
  &:focus {
    color: @basic-700;
    border-color: rgba(0, 0, 0, 0);
    box-shadow: 0 4px 7px 0 rgba(199, 210, 222, 0.6);
  }
  &-disabled,
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background: @standard-white;
      border-color: @standard-white;
      color: @basic-200;
      box-shadow: 0 1px 2px 0 rgba(199, 210, 222, 0.3);
    }
  }
}
// danger button style
.btn-danger() {
  .button-variant-danger(@standard-white, @error-400, @btn-danger-border);
  &:hover,
  &:focus {
    color: @standard-white;
    background: @error-600;
    border-color: rgba(0, 0, 0, 0);
  }
  &-disabled,
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background: @error-200;
      border-color: rgba(0, 0, 0, 0);
      color: @standard-white;
    }
  }
}
